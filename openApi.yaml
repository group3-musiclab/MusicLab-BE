openapi: 3.0.3
info:
  title: Music Lab
  description: This is API for Music Lab Capstone Project
  version: "1.0.0"
  contact:
    email: alifmuhamadhafidz23@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KHARISMAJANUAR/MusicLab-API/1.0.0
  - url: https://baggioshop.site
    description: primarry link

paths:
  /register:
    post:
      tags:
        - "Auth"
      description: register feature for new users
      summary: register feature for new users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                role:
                  type: string
                  format: array
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              name: "Alif Muhamad Hafidz"
              role: ["Mentor", "Student"]
              email: "alifmuhamadhafidz23@gmail.com"
              password: "123"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success create account"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /login:
    post:
      tags:
        - "Auth"
      description: login feature for users
      summary: login feature for users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: "alifmuhamadhafidz23@gmail.com"
              password: "123"
      responses:
        200:
          description: "login success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Alif Muhamad Hafidz"
                  role: "Student"
                  email: "alifmuhamadhafidz23@gmail.com"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySUQiOjR9.QTZxERh4CwC_UnL_eJvTi_A_qdLeBZ-IjR4nqoxjodk"
                message: "login success"
                
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"
  /students/profile:
    get:
      tags:
        - "Student"
      description: get student profile
      summary: get student profile
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show student profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  avatar: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/559d75ff-88c8-40af-8740-233667b36feco.png"
                  name: "Alif Muhamad Hafidz"
                  email: "alifmuhamadhafidz23@gmail.com"
                  sex: "Male"
                  phone: "0813456"
                  address: "Bangka"
                message: "success show student profile"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /students:
    put:
      tags:
        - "Student"
      description: edit student profile
      summary: edit student profile
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
            example:
              avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                sex:
                  type: string
                phone:
                  type: string
                address:
                  type: string
            example:
              name: "Alif Muhamad Hafidz"
              email: "alifmuhamadhafidz23@gmail.com"
              sex: "Male"
              phone: "0813456"
              address: "Bangka"
      responses:
        200:
          description: success update student profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Alif Muhamad Hafidz"
                  email: "alifmuhamadhafidz23@gmail.com"
                  sex: "Male"
                  phone: "0813456"
                  address: "Bangka"
                message: "success update student profile"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Student"
      description: deactivate student
      summary: deactivate student
      security:
        - JWTAuth: []
      responses:
        200:
          description: success deactivate student
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succes deactivate student"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /students/password:
    put:
      tags:
        - "Student"
      description: edit student password
      summary: edit student password
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
            example:
              old_password: "1234"
              new_password: "5678"
              password_confirmation: "5678"
      responses:
        200:
          description: success update student password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success update student password"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /mentors:
    get:
      tags:
        - "Mentor"
      description: get all mentor
      summary: get all mentor
      parameters:
      - in: query
        name: q
        schema:
          type: string
          maximum: 50
        examples:       
          none:         
            value: ""    
            summary: "to get all mentor list"
          name: 
            value: "Alif"   
            summary: "to search mentor by it's name"
          genre: 
            value: "Jazz"   
            summary: "to search mentor by music genre"
          rating: 
            value: 3   
            summary: "to search mentor by their rating"
          price: 
            value: 230000   
            summary: "to search mentor by their class price"
          qualification:
            value: "international"
            summary: "to search mentor by their qualification"
      responses:
        200:
          description: "to get all mentor list"
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Alif Muhamad Hafidz",
                      rating: 3,
                      price: 300000,
                      qualification: "National Sertification",
                    },
                    {
                      id: 2,
                      avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Kharisma",
                      rating: 4,
                      price: 500000,
                      qualification: "International Sertification",
                    },
                  ]
                message: "success show all mentor"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "Mentor"
      description: edit mentor profile
      summary: edit mentor profile
      security:
        - JWTAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
            example:
              avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                sex:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                instagram:
                  type: string
                price:
                  type: number
                about:
                  type: string
            example:
              name: "Alif Muhamad Hafidz"
              email: "alifmuhamadhafidz23@gmail.com"
              sex: "Male"
              phone: "0813456"
              address: "Bangka"
              instagram: "@alifhfdz"
              price: 350000
              about: "senior musical teacher"
      responses:
        200:
          description: success update student profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Alif Muhamad Hafidz"
                  email: "alifmuhamadhafidz23@gmail.com"
                  sex: "Male"
                  phone: "0813456"
                  address: "Bangka"
                  instagram: "@alifhfdz"
                  price: 350000
                  about: "senior musical teacher"
                message: "success update mentor profile"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Mentor"
      description: deactivate mentor
      summary: deactivate mentor
      security:
        - JWTAuth: []
      responses:
        200:
          description: success deactivate mentor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succes deactivate mentor"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /mentors/profile:
    get:
      tags:
        - "Mentor"
      description: get mentor profile
      summary: get mentor profile
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show mentor profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  avatar: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/559d75ff-88c8-40af-8740-233667b36feco.png"
                  name: "Alif Muhamad Hafidz"
                  email: "alifmuhamadhafidz23@gmail.com"
                  sex: "Male"
                  phone: "0813456"
                  address: "Bangka"
                  instagram: "@alifhfdz"
                  price: 350000
                  about: "senior musical teacher"
                  genre: "Jazz"
                  instrument: "Guitar"
                  count_reviews: 47000
                message: "success show mentor profile"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/password:
    put:
      tags:
        - "Mentor"
      description: edit mentor password
      summary: edit mentor password
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
            example:
              old_password: "1234"
              new_password: "5678"
              password_confirmation: "5678"
      responses:
        200:
          description: success update mentor password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success update mentor password"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /mentors/instruments:
    post:
      tags:
        - "Mentor"
      description: post mentor instrument
      summary: post mentor instrument
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instrument:
                  type: integer
            example:
              instrument: 1
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success add mentor instrument"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/instruments/{instrument_id}:
    delete:
      tags:
        - "Mentor"
      description: delete mentor instrument by instrument id
      summary: delete mentor instrument by instrument id
      security:
        - JWTAuth: []
      parameters:
        - name: instrument_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success delete mentor instrument
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete mentor instrument"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /mentors/genres:
    post:
      tags:
        - "Mentor"
      description: post mentor genres
      summary: post mentor genres
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                genre:
                  type: integer
            example:
              genre: 1
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success add mentor genre"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/genres/{genre_id}:
    delete:
      tags:
        - "Mentor"
      description: delete mentor genres by genre id
      summary: delete mentor genres by genre id
      security:
        - JWTAuth: []
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success delete mentor genre
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete mentor genre"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /mentors/credentials:
    post:
      tags:
        - "Mentor"
      description: post mentor credential
      summary: post mentor credential
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                certificate:
                  type: string
                  format: binary
            example:
              certificate: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                name:
                  type: string
            example:
              type: "International"
              name: "Guitar Master"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success add mentor credential"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/{mentor_id}/reviews:
    post:
      tags:
        - "Review"
      description: make a review in mentor class
      summary: make a review in mentor class
      security:
        - JWTAuth: []
      parameters:
        - name: mentor_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                comment:
                  type: string
            example:
              rating: 3
              comment: "Very Good"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success make a review"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Review"
      description: get mentor review
      summary: get mentor review
      security:
        - JWTAuth: []
      parameters:
        - name: mentor_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success get mentor review
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Alif Muhamad Hafidz",
                      rating: 3,
                      comment: "Very Good",
                      created_at: "2023-03-23"
                    },
                    {
                      id: 2,
                      avatar: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Kharisma",
                      rating: 4,
                      comment: "Perfect",
                      created_at: "2023-03-22"
                    },
                  ]
                message: "success show all mentor review"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/chat:
    post:
      tags:
       - "Chat"
      description: chat from mentor to student
      summary: chat from mentor to student
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                student_id:
                  type: integer
                chat:
                  type: string
            example:
              student_id: 3
              chat: "Hallo guys"
      responses:
        201:
          description: "success chat to student"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success chat to student"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Chat"
      description: get a chat from student
      summary: get a chat from student
      security:
        - JWTAuth: []
      responses:
        200:
          description: "get a chat from student"
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      sender_name: "Alif",
                      chat: "Hallo sir"
                    },
                    {
                      id: 2,
                      sender_name: "Alif",
                      chat: "How Are You"
                    },
                  ]
                message: "success show a chat from student"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /students/chat:
    post:
      tags:
       - "Chat"
      description: chat from student to mentor
      summary: chat from student to mentor
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mentor_id:
                  type: integer
                chat:
                  type: string
            example:
              mentor_id: 3
              chat: "Hallo sir"
      responses:
        201:
          description: "success chat to mentor"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success chat to student"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Chat"
      description: get a chat from mentor
      summary: get a chat from mentor
      security:
        - JWTAuth: []
      responses:
        200:
          description: "get a chat from mentor"
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      sender_name: "Joko",
                      chat: "Hallo guys"
                    },
                    {
                      id: 2,
                      sender_name: "Joko",
                      chat: "How's today?"
                    },
                  ]
                message: "success show a chat from mentor"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/classes:
    post:
      tags:
        - "Class"
      description: make a class
      summary: make a class
      security:
        - JWTAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                name:
                  type: string
                level:
                  type: string
                  format: array
                description:
                  type: string
                syllabus:
                  type: string
                for_whom:
                  type: string
                requirement:
                  type: string
                price:
                  type: number
                duration:
                  type: integer
            example:
              image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
              name: "Guitar Class"
              level: ["Basic", "Intermediate", "Advance"]
              description: "Best Guitar Course"
              syllabus: "In here we will master the guitar class under 3 month"
              from_whom: "Newbie"
              requirement: "Have a Guitar"
              price: 325000
              duration: 3
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                name:
                  type: string
                level:
                  type: string
                  format: array
                description:
                  type: string
                syllabus:
                  type: string
                for_whom:
                  type: string
                requirement:
                  type: string
                price:
                  type: number
                duration:
                  type: integer
            example:
              image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
              name: "Guitar Class"
              level: ["Basic", "Intermediate", "Advance"]
              description: "Best Guitar Course"
              syllabus: "In here we will master the guitar class under 3 month"
              from_whom: "Newbie"
              requirement: "Have a Guitar"
              price: 325000
              duration: 3
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success make a class"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/{mentor_id}/class:
    get:
      tags:
        - "Class"
      description: get mentor class
      summary: get mentor class
      security:
        - JWTAuth: []
      parameters:
        - name: mentor_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success get mentor class
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      image: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Guitar Class",
                      price: 425000,
                    },
                    {
                      id: 2,
                      image: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Piano Class",
                      price: 525000,
                    },
                  ]
                message: "success show all mentor class"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/{mentor_id}/class/{class_id}:
    get:
      tags:
        - "Class"
      description: get mentor class detail
      summary: get mentor class detail
      security:
        - JWTAuth: []
      parameters:
        - name: mentor_id
          in: path
          required: true
          schema:
            type: integer
        - name: class_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success get mentor class detail
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                  name: "Guitar Class"
                  level: "Basic"
                  description: "Best Guitar Course"
                  syllabus: "In here we will master the guitar class under 3 month"
                  from_whom: "Newbie"
                  requirement: "Have a Guitar"
                  price: 325000
                  duration: 3
                message: "success show mentor class detail"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/schedules:
    post:
      tags:
       - "Schedule"
      description: post mentor schedule
      summary: post mentor schedule
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                end_date:
                  type: string
                time:
                  type: string
            example:
              start_date: "2023-03-23"
              end_date: "2023-03-29"
              time: "09:00 to 11:00"
      responses:
        201:
          description: "success post a schedule"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: integer
              example:
                message: "success post a schedule"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/{mentor_id}/schedules:
    get:
      tags:
        - "Schedule"
      description: get mentor schedule
      summary: get mentor schedule
      security:
        - JWTAuth: []
      parameters:
        - name: mentor_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success get mentor schedule
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      start_date: "2023-03-23",
                      end_date: "2023-03-29",
                      time: "09:00 to 11:00"
                    },
                    {
                      id: 2,
                      start_date: "2023-04-23",
                      end_date: "2023-04-29",
                      time: "09:00 to 11:00"
                    },
                  ]
                message: "success show all mentor schedule"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /transactions:
    post:
      tags:
       - "Transaction"
      description: make a transaction
      summary: make a transaction
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mentor_id:
                  type: integer
                class_id:
                  type: integer
            example:
              mentor_id: 1
              class_id: 1
      responses:
        201:
          description: "login success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  class_id: 1
                  payment_url: "midtrans.com/payment"
                message: "success make transaction"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /mentors/transactions:
    get:
      tags:
        - "Transaction"
      description: get mentor transaction
      summary: get mentor transaction
      security:
        - JWTAuth: []
      responses:
        200:
          description: success get mentor transaction
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      student_name: "Alif",
                      class_name: "Guitar Class",
                      start_date: "2023-03-23",
                      end_date: "2023-03-29",
                      price: 325000,
                      status_payment: "Settlement"
                    },
                    {
                      id: 2,
                      student_name: "Kharisma",
                      class_name: "Piano Class",
                      start_date: "2023-04-23",
                      end_date: "2023-04-29",
                      price: 325000,
                      status_payment: "Pending"
                    },
                  ]
                message: "success show mentor transaction history"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /students/transactions:
    get:
      tags:
        - "Transaction"
      description: get mentor student
      summary: get mentor student
      security:
        - JWTAuth: []
      responses:
        200:
          description: success get student transaction
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      mentor_name: "Joko",
                      class_name: "Guitar Class",
                      start_date: "2023-03-23",
                      end_date: "2023-03-29",
                      price: 325000,
                      status_payment: "Settlement"
                    },
                    {
                      id: 2,
                      mentor_name: "Budi",
                      class_name: "Piano Class",
                      start_date: "2023-04-23",
                      end_date: "2023-04-29",
                      price: 325000,
                      status_payment: "Pending"
                    },
                  ]
                message: "success show student transaction history"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
  responses:
    400:
      description: "error from user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "bad request"
    500:
      description: "error from server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "internal server error"